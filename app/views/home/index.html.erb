<!DOCTYPE html>
<html>
<head>
    <title>Berlin-Bitcoin</title>
    <meta charset="UTF-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href='https://fonts.googleapis.com/css?family=Roboto:400,300,100,500,300italic' rel='stylesheet' type='text/css'>

</head>

<body>

<div id="jumbotron">
    <div id="fb-root"></div>
     <fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
</fb:login-button>

<div id="status">
</div>

<!-- Content/ Header -->
<header>
  <br>
  <br>
  <h1>Welcome to Berlin</h1>
  <%= image_tag("BerlinLogo.png") %>

    <h2>Tired of monthly premiums?</h2>
    <h2>Pay <em>only</em> for what you use. </h2>
    <h3>Starting at $0.01</h3>

  <div class="wrapper">
    <button type="button" onclick="Nice.">Get Started</button></div>
  </div>
  <br>
</header>
<!--
<header>
  <div class="baner-text">
    <h1>Welcome to Berlin</h1>
    <br>
    <h2>Tired of monthly premiums?</h2>
    <h2>Pay <em>only</em> for what you use. </h2>
    <h3>Starting at $0.01</h3>
  </div>
    <br>
  <button type="button" onclick="Nice.">Get Started</button>

</header> -->
<script>
// This is called with the results from from FB.getLoginStatus().
    function statusChangeCallback(response) {
      console.log('statusChangeCallback');
      console.log(response);
  // The response object is returned with a status field that lets the
  // app know the current login status of the person.
  // Full docs on the response object can be found in the documentation
  // for FB.getLoginStatus().
    if (response.status === 'connected') {
    // Logged into your app and Facebook.
      testAPI();
    } else if (response.status === 'not_authorized') {
    // The person is logged into Facebook, but not your app.
      document.getElementById('status').innerHTML = 'Please log ' +
      'into this app.';
    } else {
    // The person is not logged into Facebook, so we're not sure if
    // they are logged into this app or not.
    document.getElementById('status').innerHTML = 'Please log ' +
      'into Facebook.';
    }
  }
// This function is called when someone finishes with the Login
// Button.  See the onlogin handler attached to it in the sample
// code below.
      function checkLoginState() {
        FB.getLoginStatus(function(response) {
          statusChangeCallback(response);
        });
      }
window.fbAsyncInit = function() {
FB.init({
  appId      : '<%= ENV["FB_ID"] %>',
  cookie     : true,  // enable cookies to allow the server to access
                      // the session
  xfbml      : true,  // parse social plugins on this page
  version    : 'v2.2' // use version 2.2
});
}
window.fbAsyncInit = function() {
FB.init({
    appId      : '<%= ENV["FB_ID"] %>',
    cookie     : true,  // enable cookies to allow the server to access                      // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.2' // use version 2.2
  });
// Now that we've initialized the JavaScript SDK, we call
// FB.getLoginStatus().  This function gets the state of the
// person visiting this page and can return one of three states to
// the callback you provide.  They can be:
//
// 1. Logged into your app ('connected')
// 2. Logged into Facebook, but not your app ('not_authorized')
// 3. Not logged into Facebook and can't tell if they are logged into
//    your app or not.
//
// These three cases are handled in the callback function.
  FB.getLoginStatus(function(response) {
  statusChangeCallback(response);
  });
  };
// Load the SDK asynchronously
  (function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/sdk.js";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));
// Here we run a very simple test of the Graph API after login is
// successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
  console.log('Welcome!  Fetching your information.... ');
  FB.api('/me', function(response) {
    console.log('Successful login for: ' + response.name);
    document.getElementById('status').innerHTML =
      'Thanks for logging in, ' + response.name + '!';
      if (response.id) {
        var redirect = function(url, method) {
          var form = $('<form>', {
              method: method,
              action: url
            });
          var input = $('<input>')
              .attr("type", "text")
              .attr("name", "facebook_id").val(response.id);
          var inputName = $('<input>')
              .attr("type", "text")
              .attr("name", "name").val(response.name);
          var inputUserType = $('<input>')
              .attr("type", "text")
              .attr("name", "user_type").val("user");
          form.append(input);
          form.append(inputName);
          form.append(inputUserType);
          form.submit();
        };
      redirect("<%= login_url %>", 'post');
      }
  });
}
</script>

<!--
 // Below we include the Login Button social plugin. This button uses
 // the JavaScript SDK to present a graphical Login button that triggers
 // the FB.login() function when clicked.
-->




<div id="status">
</div>


</body>
</html>
